definitions:
  domain.Column:
    properties:
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      project_id:
        type: integer
    type: object
  domain.CreateColumnInput:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      project_id:
        type: integer
    required:
    - name
    - project_id
    type: object
  domain.CreateProjectInput:
    properties:
      deadline:
        type: string
      description:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    type: object
  domain.CreateSubtaskInput:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      task_id:
        type: integer
    required:
    - name
    - task_id
    type: object
  domain.CreateTaskInput:
    properties:
      column_id:
        type: integer
      deadline:
        type: string
      description:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - column_id
    - description
    - name
    type: object
  domain.DailyStats:
    properties:
      data:
        items:
          properties:
            count:
              type: integer
            hour:
              type: integer
          type: object
        type: array
    type: object
  domain.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.Project:
    properties:
      archived:
        type: boolean
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  domain.ProjectMetrics:
    properties:
      days_elapsed:
        type: integer
      days_left:
        type: integer
      done_tasks:
        type: integer
      perception_done:
        type: integer
      projected_finish_date:
        type: string
      rem_tasks:
        type: integer
      status:
        type: string
      total_tasks:
        type: integer
      v_real:
        type: number
      v_req:
        type: number
    type: object
  domain.ProjectProgress:
    properties:
      count:
        type: integer
      day:
        type: string
    type: object
  domain.ProjectStats:
    properties:
      completed:
        type: integer
      overdue:
        type: integer
      total:
        type: integer
    type: object
  domain.RegisterInput:
    properties:
      password:
        maxLength: 64
        minLength: 8
        type: string
      re_password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 25
        minLength: 3
        type: string
    required:
    - password
    - re_password
    - username
    type: object
  domain.Subtask:
    properties:
      archived:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      status:
        type: boolean
      task_id:
        type: integer
      updated_at:
        type: string
    type: object
  domain.Task:
    properties:
      archived:
        type: boolean
      column_id:
        type: integer
      created_at:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
      status:
        type: boolean
      updated_at:
        type: string
    type: object
  domain.UpdateColumnInput:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      position:
        minimum: 1
        type: integer
    type: object
  domain.UpdateProjectInput:
    properties:
      archived:
        type: boolean
      deadline:
        type: string
      description:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
    type: object
  domain.UpdateTaskInput:
    properties:
      archived:
        type: boolean
      column_id:
        type: integer
      deadline:
        type: string
      description:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      position:
        minimum: 1
        type: integer
      status:
        type: boolean
    type: object
  domain.YearlyStats:
    properties:
      data:
        items:
          properties:
            count:
              type: integer
            month:
              type: integer
          type: object
        type: array
    type: object
  v1.monthlyStatsOutput:
    properties:
      data:
        items:
          properties:
            count:
              type: integer
            day:
              type: string
          type: object
        type: array
    type: object
  v1.tokenResponse:
    properties:
      access_token:
        type: string
    type: object
  v1.weeklyStatsOutput:
    properties:
      data:
        items:
          properties:
            count:
              type: integer
            day:
              type: string
          type: object
        type: array
    type: object
info:
  contact: {}
  description: API для управления задачами
  title: Todo API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для авторизации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: Устанавливает refresh_token
              type: string
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
      summary: Авторизация
      tags:
      - auth
  /api/v1/auth/refresh:
    get:
      description: Обновляет Refresh и Access токены
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: Устанавливает refresh_token
              type: string
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "401":
          description: Unauthorized
      summary: Обновить токены
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для регистрации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      summary: Регистрация
      tags:
      - auth
  /api/v1/columns:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для создания колонки
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateColumnInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Column'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Создать колонку
      tags:
      - column
  /api/v1/columns/{column_id}:
    delete:
      parameters:
      - description: ID колонки
        in: path
        name: column_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Удалить колонку
      tags:
      - column
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID колонки
        in: path
        name: column_id
        required: true
        type: integer
      - description: Данные для обновления колонки
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateColumnInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Column'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Обновить колонку
      tags:
      - column
  /api/v1/columns/{column_id}/tasks:
    get:
      parameters:
      - description: ID колонки
        in: path
        name: column_id
        required: true
        type: integer
      - description: Номер страницы, по уполчанию 1
        in: query
        name: page
        type: integer
      - description: Кол-во итоговых записей, по уполчанию 10
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Total-Pages:
              description: Общее количество страниц задач на колонке
              type: integer
          schema:
            items:
              $ref: '#/definitions/domain.Task'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Список задач
      tags:
      - task
  /api/v1/projects:
    get:
      parameters:
      - description: Номер страницы, по уполчанию 1
        in: query
        name: page
        type: integer
      - description: Кол-во итоговых записей, по уполчанию 10
        in: query
        name: limit
        type: integer
      - description: Паттерн поиска по имени или по описанию
        in: query
        name: search
        type: string
      - description: Сортировка по created_at (по умолчанию udpated_at)
        in: query
        name: order
        type: string
      - description: Фильтрует проекты по полю archived
        in: query
        name: archived
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Total-Pages:
              description: Общее количество страниц проектов у пользователя
              type: integer
          schema:
            items:
              $ref: '#/definitions/domain.Project'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - BearerAuth: []
      summary: Список проектов
      tags:
      - project
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для создания проекта
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateProjectInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Project'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Создать проект
      tags:
      - project
  /api/v1/projects/{project_id}:
    delete:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Удалить проект
      tags:
      - project
    get:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Project'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Детали проекта
      tags:
      - project
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      - description: Данные для обновления проекта
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateProjectInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Project'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Обновить проект
      tags:
      - project
  /api/v1/projects/{project_id}/columns:
    get:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      - description: Номер страницы, по уполчанию 1
        in: query
        name: page
        type: integer
      - description: Кол-во итоговых записей, по уполчанию 10
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Total-Pages:
              description: Общее количество страниц колонок на проекте
              type: integer
          schema:
            items:
              $ref: '#/definitions/domain.Column'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Список колонок
      tags:
      - column
  /api/v1/projects/{project_id}/metrics:
    get:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ProjectMetrics'
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Метрики проекта
      tags:
      - project
  /api/v1/projects/{project_id}/progress:
    get:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ProjectProgress'
            type: array
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Прогресс проекта
      tags:
      - project
  /api/v1/projects/{project_id}/stats:
    get:
      parameters:
      - description: ID проекта
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.ProjectStats'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Статистика проекта
      tags:
      - project
  /api/v1/stats/daily:
    get:
      description: Поле "date" будет брать текущую дату, если его не заполнить
      parameters:
      - description: 'Дата в формат: year-month-day'
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.DailyStats'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Статистика за день
      tags:
      - stats
  /api/v1/stats/monthly:
    get:
      description: Поля "month" и "year" будут брать текущую дату, если они не заполнены
      parameters:
      - description: Месяц
        in: query
        name: month
        type: integer
      - description: Год
        in: query
        name: year
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.monthlyStatsOutput'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Статистика за месяц
      tags:
      - stats
  /api/v1/stats/weekly:
    get:
      description: Поле "date" будет брать текущую дату, если его не заполнить
      parameters:
      - description: 'Дата в формат: year-month-day'
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.weeklyStatsOutput'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Статистика за неделю
      tags:
      - stats
  /api/v1/stats/yearly:
    get:
      description: Поле "year" будет брать текущую дату, если его не заполнить
      parameters:
      - description: Год
        in: query
        name: year
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.YearlyStats'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Статистика за год
      tags:
      - stats
  /api/v1/subtasks:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для создания подзадачи
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateSubtaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Созданная подзадача
          schema:
            $ref: '#/definitions/domain.Subtask'
        "400":
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Создать подзадачу
      tags:
      - subtask
  /api/v1/subtasks/{subtask_id}:
    delete:
      parameters:
      - description: ID подзадачи
        in: path
        name: subtask_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Удалить подзадачу
      tags:
      - subtask
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID подзадачи
        in: path
        name: subtask_id
        required: true
        type: integer
      - description: Данные для обновления подзадачи
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная подзадача
          schema:
            $ref: '#/definitions/domain.Subtask'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Обновить подзадачу
      tags:
      - subtask
  /api/v1/tasks:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для создания задачи
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Созданная задача
          schema:
            $ref: '#/definitions/domain.Task'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Создать задачу
      tags:
      - task
  /api/v1/tasks/{task_id}:
    delete:
      parameters:
      - description: ID задачи
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Удалить задачу
      tags:
      - task
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID задачи
        in: path
        name: task_id
        required: true
        type: integer
      - description: Данные для обновления задачи
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная задача
          schema:
            $ref: '#/definitions/domain.Task'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
      - BearerAuth: []
      summary: Обновить задачу
      tags:
      - task
  /api/v1/tasks/{task_id}/subtasks:
    get:
      parameters:
      - description: ID задачи
        in: path
        name: task_id
        required: true
        type: integer
      - description: Номер страницы, по уполчанию 1
        in: query
        name: page
        type: integer
      - description: Кол-во итоговых записей, по уполчанию 10
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            X-Total-Pages:
              description: Общее количество страниц подзадач на колонке
              type: integer
          schema:
            items:
              $ref: '#/definitions/domain.Subtask'
            type: array
        "400":
          description: Bad Request
      security:
      - BearerAuth: []
      summary: Список подзадач
      tags:
      - subtask
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
